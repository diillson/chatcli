name: Release Binaries

on:
  push:
    tags:
      - 'v*'
  # Opção para executar manualmente na UI do GitHub
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag to release (leave empty to use latest)'
        required: false

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Get tag name
        id: get_tag
        run: |
          if [[ -n "${{ github.event.inputs.tag_name }}" ]]; then
            echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
          elif [[ -n "${{ github.ref_name }}" ]]; then
            echo "TAG_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
          else
            echo "TAG_NAME=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          fi

      - name: Build binaries
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          VERSION=${TAG_NAME}
          LDFLAGS="-X 'github.com/diillson/chatcli/version.Version=${VERSION}' -X 'github.com/diillson/chatcli/version.CommitHash=${COMMIT_HASH}' -X 'github.com/diillson/chatcli/version.BuildDate=${BUILD_DATE}'"
          
          echo "Building version: ${VERSION}"
          echo "Commit hash: ${COMMIT_HASH}"
          echo "Build date: ${BUILD_DATE}"
          
          # Build para várias plataformas
          GOOS=linux GOARCH=amd64 go build -ldflags="${LDFLAGS}" -o chatcli-linux-amd64 ./main.go
          GOOS=darwin GOARCH=amd64 go build -ldflags="${LDFLAGS}" -o chatcli-darwin-amd64 ./main.go
          GOOS=darwin GOARCH=arm64 go build -ldflags="${LDFLAGS}" -o chatcli-darwin-arm64 ./main.go
          GOOS=windows GOARCH=amd64 go build -ldflags="${LDFLAGS}" -o chatcli-windows-amd64.exe ./main.go
          
          # Verifica a versão do binário
          ./chatcli-linux-amd64 --version

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: |
            chatcli-linux-amd64
            chatcli-darwin-amd64
            chatcli-darwin-arm64
            chatcli-windows-amd64.exe
          draft: false
          prerelease: false
          generate_release_notes: true
          name: "Release ${{ env.TAG_NAME }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Usar o token padrão é suficiente