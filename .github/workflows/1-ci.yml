name: CI (Lint, Fmt, Test, Coverage)

on:
  pull_request:
    branches: [develop, main]

concurrency:
  group: ci-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  # JOB 1: Executa os testes e gera o relatório de cobertura
  lint-and-test:
    name: Lint, Test and Generate Coverage
    runs-on: ubuntu-latest
    if: github.actor != 'release-please[bot]' && github.actor != 'github-actions[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m

      - name: Check gofmt
        run: |
          output=$(gofmt -l .)
          if [ -n "$output" ]; then
            echo "::error file=gofmt::The following files are not formatted:"
            echo "$output"
            exit 1
          fi

      - name: Go vet
        run: go vet ./...

      - name: Run unit tests
        run: |
          go test -race -coverprofile=coverage.out ./... -v
          go tool cover -func=coverage.out > coverage.txt

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.txt
          retention-days: 7 # O artefato só precisa existir por 7 dias
