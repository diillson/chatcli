name: Prepare Release PR (develop -> main)

on:
  push:
    branches: [develop]

permissions:
  pull-requests: write
  contents: write

concurrency:
  group: prepare-pr-develop-to-main
  cancel-in-progress: true

jobs:
  prepare_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_RELEASE_TOKEN }}

      - name: Fetch main branch
        run: git fetch origin main

      - name: Check for changes between develop and main
        id: check_diff
        run: |
          if git diff --quiet origin/main..develop; then
            echo "No changes detected between develop and main. Exiting."
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected. Proceeding to create PR."
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Set up Go
        if: steps.check_diff.outputs.changed == 'true'
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install and configure tools
        if: steps.check_diff.outputs.changed == 'true'
        env:
          GOPATH: ${{ github.workspace }}/go
        run: |
          go install github.com/diillson/chatcli@latest
          echo "${{ env.GOPATH }}/bin" >> $GITHUB_PATH
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Generate PR Content with AI
        if: steps.check_diff.outputs.changed == 'true'
        id: generate-pr-content
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # ... (seu script para gerar título e corpo com a IA, sem alterações)
          LOG_DIFF=$(git log origin/main..develop --pretty=format:"- %s (%h) by %an")
          FILE_DIFF=$(git diff --stat origin/main..develop)
          PROMPT=$(cat <<EOF
          Sua única tarefa é em inglês, gerar um título e um corpo para um Pull Request, mesclando 'develop' em 'main'. O projeto usa squash merge.
          O título DEVE seguir o padrão Conventional Commits (ex: 'feat(api): ...', 'fix(cli): ...').
          Sua resposta DEVE SEGUIR ESTRITAMENTE O SEGUINTE FORMATO:
          <TÍTULO DO PR>
          ---
          <CORPO DO PR>
          EOF
          )
          AI_RESPONSE=$(chatcli -p "$PROMPT" --no-anim --provider OPENAI --model gpt-4o-mini)
          echo "ai_response<<EOF" >> $GITHUB_OUTPUT
          echo "$AI_RESPONSE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create or Update PR
        if: steps.check_diff.outputs.changed == 'true'
        id: create_pr
        env:
          GH_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
        run: |
          AI_RESPONSE="${{ steps.generate-pr-content.outputs.ai_response }}"
          TITLE=$(echo "$AI_RESPONSE" | head -n 1)
          BODY=$(echo "$AI_RESPONSE" | tail -n +3)
          PR_NUMBER=$(gh pr list --head develop --base main --state open --json number -q '.[0].number')
          if [ -n "$PR_NUMBER" ]; then
            gh pr edit $PR_NUMBER --title "$TITLE" --body "$BODY"
          else
            gh pr create --title "$TITLE" --body "$BODY" --head develop --base main
          fi

      - name: Run release-please to update changelog and version
        if: steps.check_diff.outputs.changed == 'true'
        id: release-please
        uses: googleapis/release-please-action@v4
        with:
          command: manifest
          token: ${{ secrets.GH_RELEASE_TOKEN }}
          release-type: go
          target-branch: develop

      - name: Push changelog and version updates to PR
        # A condição agora verifica se o release-please criou/modificou arquivos
        if: steps.check_diff.outputs.changed == 'true' && steps.release-please.outputs.paths_created == 'true'
        run: |
          git push origin develop